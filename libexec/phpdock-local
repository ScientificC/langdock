#!/bin/bash
# Summary: Set or show the local application-specific php version
# Usage: phpdock local [-a|--apache]
#        phpdock local --unset [-a|--apache]
#
# Set or show php local version setted in .envrc files
# By default, show php cli version
#
# When you run a php command, phpdock will look for a '.cli-version'
# or '.apache-version' file in the current directory and each parent
# directory. If no such file is found in the tree, phpdock will use
# the global php version specified with 'phpdock global'.
#
# <version> should be a string matching a php version known to phpdock
# see 'phpdock versions'
#
# More information at https://github.com/lucasdc6/phpdock#readme

set -e
[ -n "$PHPDOCK_DEBUG" ] && set -x

# Set config variables
COMMAND=`basename $0 | cut -d- -f2`

# Provide phpdock completions
if [ "$1" = "--complete" ]; then
  if echo $@ | grep "\-\-apache" > /dev/null; then
    cat $MAIN_PATH/etc/apache_versions
  else
    echo system
    cat $MAIN_PATH/etc/cli_versions
  fi
  echo --apache
  echo --unset
  echo --help
  exit 0
fi

function upsearch {
  slashes=${PWD//[^\/]/}
  directory="$PWD"
  for (( n=${#slashes}; n>0; --n ))
  do
    test -e "$directory/$1" && echo "$directory/$1" && return
    directory="$directory/.."
  done
}

# Function to change local version of php
# Arguments
#   1: version to set as local
function change_local {
  PHPVERSION=`upsearch ".$1-version"`
  if [ "$2" ]
  then
    echo $2 > ".$1-version"
    echo "Local php version setted to $2 in file .$1-version"
  elif [ -n "$PHPVERSION" ]
  then
    cat $PHPVERSION
    exit
  else
    echo "$PROG: no local version configured for this directory ($1 mode)"
    exit 1
  fi
}

# Config getopt
TEMP=`getopt -o '' --long apache,unset -n $PROG -- "$@"`
eval set -- "$TEMP"

# default value of apache
MODE=cli
OPTION=set

# Parse arguments
while true ; do
  case "$1" in
    --apache)
      MODE=apache
      shift;;
    --unset)
      OPTION=unset
      shift;;
    --) shift ; break ;;
    *) echo "Internal error!" ; exit 1 ;;
  esac
done

case "$OPTION" in
  set)
    change_local $MODE $1
  ;;
  unset)
    PHPVERSION=`upsearch ".$MODE-version"`
    rm $PHPVERSION
esac
