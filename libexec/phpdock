#!/bin/bash

set -e

[ -n "$PHPDOCK_DEBUG" ] && set -x

if [ "$1" = "--debug" ]; then
  export PHPDOCK_DEBUG=true
  shift
fi

if [ -n "$PHPDOCK_DEBUG" ]; then
  export PS4='+ [${BASH_SOURCE##*/}:${LINENO}] '
  set -x
fi

# Get the basename and main path of script
export PROG=`basename $0`
export MAIN_PATH=`realpath $0 | xargs dirname | xargs dirname`

if enable -f "${BASH_SOURCE%/*}"/../libexec/rbenv-realpath.dylib realpath 2>/dev/null; then
  abs_dirname() {
    local path="$(realpath "$1")"
    echo "${path%/*}"
  }
else
  [ -z "$PHPDOCK_NATIVE_EXT" ] || abort "failed to load \`realpath' builtin"

  READLINK=$(type -p greadlink readlink | head -1)
  [ -n "$READLINK" ] || abort "cannot find readlink - are you missing GNU coreutils?"

  resolve_link() {
    $READLINK "$1"
  }

  abs_dirname() {
    local cwd="$PWD"
    local path="$1"

    while [ -n "$path" ]; do
      cd "${path%/*}"
      local name="${path##*/}"
      path="$(resolve_link "$name" || true)"
    done

    pwd
    cd "$cwd"
  }
fi


shopt -s nullglob

export PATH="$MAIN_PATH/libexec:${PATH}"

shopt -u nullglob

abort() {
  { if [ "$#" -eq 0 ]; then cat -
    else echo "phpdock: $*"
    fi
  } >&2
  exit 1
}


command="$1"
case "$command" in
"" )
  { phpdock-help
  } | abort
  ;;
-v | --version )
  exec phpdock---version
  ;;
-h | --help )
  exec phpdock-help
  ;;
* )
  command_path="$(command -v "phpdock-$command" || true)"
  [ -n "$command_path" ] || abort "no such command \`$command'"

  shift 1
  if [ "$1" = --help ]; then
    if [[ "$command" == "sh-"* ]]; then
      echo "phpdock help \"$command\""
    else
      exec phpdock-help "$command"
    fi
  else
    exec "$command_path" "$@"
  fi
  ;;
esac
